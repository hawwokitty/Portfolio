"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const React = require("react");
const ModalContext = require("../Modal/ModalContext.cjs");
const Frame = require("../Frame/Frame.cjs");
const Clock = require("./Clock.cjs");
const WindowButton = require("./WindowButton.cjs");
const icons = require("@react95/icons");
const TaskBar_css = require("./TaskBar.css.cjs");
const TaskBar = React.forwardRef(
  ({ list }, ref) => {
    const [showList, toggleShowList] = React.useState(false);
    const [activeStart, toggleActiveStart] = React.useState(false);
    const { windows, activeWindow, setActiveWindow } = React.useContext(ModalContext.ModalContext);
    return /* @__PURE__ */ React.createElement(
      Frame.Frame,
      {
        position: "fixed",
        bottom: "0px",
        left: "0px",
        right: "0px",
        display: "flex",
        justifyContent: "space-between",
        h: "28px",
        w: "100%",
        padding: "$2",
        zIndex: "$taskbar",
        backgroundColor: "$material",
        boxShadow: "$out",
        ref
      },
      showList && /* @__PURE__ */ React.createElement(
        Frame.Frame,
        {
          position: "absolute",
          bottom: "28px",
          onClick: () => {
            toggleActiveStart(false);
            toggleShowList(false);
          }
        },
        list
      ),
      /* @__PURE__ */ React.createElement(
        WindowButton.WindowButton,
        {
          small: true,
          icon: /* @__PURE__ */ React.createElement(icons.Logo, { variant: "32x32_4" }),
          active: activeStart,
          onClick: () => {
            toggleActiveStart(!activeStart);
            toggleShowList(!showList);
          }
        },
        "Start"
      ),
      /* @__PURE__ */ React.createElement(Frame.Frame, { w: "100%", paddingLeft: "$0", ml: "$2", display: "flex" }, Object.entries(windows).map(
        ([windowId, { icon, title, hasButton }]) => hasButton && /* @__PURE__ */ React.createElement(
          WindowButton.WindowButton,
          {
            key: windowId,
            icon,
            active: windowId === activeWindow,
            onClick: () => setActiveWindow(windowId),
            small: false
          },
          /* @__PURE__ */ React.createElement("div", { className: TaskBar_css.truncate }, title)
        )
      )),
      /* @__PURE__ */ React.createElement(Clock.Clock, null)
    );
  }
);
exports.TaskBar = TaskBar;
